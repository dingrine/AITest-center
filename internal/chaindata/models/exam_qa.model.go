package models

import "time"

/* ======================
** DO NOT EDIT THIS FILE!
** ======================
** GENERATED WITH GOMODEL
** Time: 2025-08-04T18:44:43+08:00
** Author: CrazyThursdayV50
 */

type ExamQa struct {
	Id                *int64     `gorm:"column:id;type:BIGINT;primaryKey;autoIncrement" json:"id"`
	ExamId            int64      `gorm:"column:exam_id;type:BIGINT;not null" json:"exam_id"`
	QuestionCode      string     `gorm:"column:question_code;type:VARCHAR(100);size:100;not null" json:"question_code"`
	Question          string     `gorm:"column:question;type:VARCHAR(255);size:255;not null" json:"question"`
	Answer            string     `gorm:"column:answer;type:VARCHAR(255);size:255;not null" json:"answer"`
	ModelAnswer       string     `gorm:"column:model_answer;type:VARCHAR(255);size:255;not null" json:"model_answer"`
	Analysis          *string    `gorm:"column:analysis;type:VARCHAR(255);size:255" json:"analysis"`
	QuestionCreatedAt *time.Time `gorm:"column:question_created_at;type:DATETIME" json:"question_created_at"`
	AnswerCreatedAt   *time.Time `gorm:"column:answer_created_at;type:DATETIME" json:"answer_created_at"`
	QaType            *string    `gorm:"column:qa_type;type:VARCHAR(100);size:100" json:"qa_type"`
	CreatedAt         time.Time  `gorm:"column:created_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP COMMENT " json:"created_at"`
	UpdatedAt         time.Time  `gorm:"column:updated_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT " json:"updated_at"`
}

func exam_qa_id() Column[*int64] {
	return "id"
}

func (s *ExamQa) ColumnId() Column[*int64] {
	return exam_qa_id()
}

func exam_qa_exam_id() Column[int64] {
	return "exam_id"
}

func (s *ExamQa) ColumnExamId() Column[int64] {
	return exam_qa_exam_id()
}

func exam_qa_question_code() Column[string] {
	return "question_code"
}

func (s *ExamQa) ColumnQuestionCode() Column[string] {
	return exam_qa_question_code()
}

func exam_qa_question() Column[string] {
	return "question"
}

func (s *ExamQa) ColumnQuestion() Column[string] {
	return exam_qa_question()
}

func exam_qa_answer() Column[string] {
	return "answer"
}

func (s *ExamQa) ColumnAnswer() Column[string] {
	return exam_qa_answer()
}

func exam_qa_model_answer() Column[string] {
	return "model_answer"
}

func (s *ExamQa) ColumnModelAnswer() Column[string] {
	return exam_qa_model_answer()
}

func exam_qa_analysis() Column[*string] {
	return "analysis"
}

func (s *ExamQa) ColumnAnalysis() Column[*string] {
	return exam_qa_analysis()
}

func exam_qa_question_created_at() Column[*time.Time] {
	return "question_created_at"
}

func (s *ExamQa) ColumnQuestionCreatedAt() Column[*time.Time] {
	return exam_qa_question_created_at()
}

func exam_qa_answer_created_at() Column[*time.Time] {
	return "answer_created_at"
}

func (s *ExamQa) ColumnAnswerCreatedAt() Column[*time.Time] {
	return exam_qa_answer_created_at()
}

func exam_qa_qa_type() Column[*string] {
	return "qa_type"
}

func (s *ExamQa) ColumnQaType() Column[*string] {
	return exam_qa_qa_type()
}

func exam_qa_created_at() Column[time.Time] {
	return "created_at"
}

func (s *ExamQa) ColumnCreatedAt() Column[time.Time] {
	return exam_qa_created_at()
}

func exam_qa_updated_at() Column[time.Time] {
	return "updated_at"
}

func (s *ExamQa) ColumnUpdatedAt() Column[time.Time] {
	return exam_qa_updated_at()
}

func (t *ExamQa) TableName() string {
	return Schema() + ".exam_qa"
}
